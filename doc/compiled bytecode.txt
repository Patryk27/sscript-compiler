Bytecode version: 0.42

1 byte - byte - opcode type (see `\bytecode\opcodes.pas` for the opcode list)
  [for each opcode argument (parameter)]
	1 byte - byte - argument type
	
	[if `type` is a `register`]
		1 byte - byte - value from `1..4` indicating register ID (eg.1 = ei1/eb1/ec1(...), 3 = ei3; register type depends of argument type)

	[if `type` is `bool`]
		1 byte - byte - value indicating a boolean value. `0 = false`, anything else is `true`.

	[if `type` is `char`]
		1 byte - byte - ASCII char value (an unsigned number from `0..255`)

	[if `type` is `int`]
		8 bytes - int64 - signed 64-bit integer value

	[if `type` is `float`]
		10 bytes - extended - floating-point value

	[if `type` is `string`, `label reference` or `symbol memory reference`]
		x bytes - byte/char - subsequent ASCII chars; string is null-terminated (it means it ends with char `0x00`)

	[if `type` is `constant memory reference`]
		4 bytes - uint64 - referenced address

	[if `type` is anything else]
		4 bytes - integer - signed integer value

Argument types:
ptBoolReg=0	             | boolean register
ptCharReg=1	             | char register
ptIntReg=2	             | integer register
ptFloatReg=3	             | float register
ptStringReg=4	             | string register
ptReferenceReg=5             | reference-reg register
ptBool=6	             | boolean value
ptChar=7	             | char value
ptInt=8		             | integer value
ptFloat=9	             | float value
ptString=10	             | string value
ptStackVal=11	             | value from the stack
ptConstantMemRef=12          | constant memory reference
*ptLabelAbsoluteReference=13 | label absolute reference, used in the program linking stage
*ptSymbolMemRef=14           | symbol reference, as above

"*" means that arguments of that type cannot appear in the final program bytecode (can be used only in libraries).