To enable option, write `option+` or just `option`; to disable: `option-`.
By default, all switches are disabled.

1.Compiler
	-bytecode / -b =<file>	saves generated verbal bytecode into specified file
	-output / -o =<file>	changes output file name
	-initcode		includes `init.sm` into the program (programs only)

	-includepath <path>	changes the include path; default: `$file;$compiler`

2.Code
	-Cm <mode>
		-Cm app		compiles file as an application (default)
		-Cm lib		compiles file as a library
		-Cm bytecode	compiles file as a bytecode

	-internal-const / -Cconst	enable special (internal) constants like `__self` or `__line`

3.Optimizations
	--register-alloc / -Or		allows to allocate variables in registers (when possible)
	--constant-folding / -Of	enables constant expression folding
	--bytecode-optimize / -Op	optimizes bytecode
	--remove-dead / -Ou		tries to remove unreachable (dead) parts of code (eg.code after `return`) and unused variables; it works the best with `--optimize-branches`
	--short-circuit	/ -Os		enables/disables short-circuit-evalution. It is implicitly **enabled** and most likely you don't want to turn it off.

	--constant-propagation / -Oc	enables constant propagation (it's an a bit expensive operation)

	--optimize-branches / -Ob	optimizes condition jumps (it's an expensive optimization)

	-O1	enables `--register-alloc`, `--constant-folding`, `--bytecode-optimize`
	-O2	enables `-O1`, `--remove-dead` and `--constant-propagation`
	-O3	enables `-O2` and `--optimize-branches`

4.Debug
	--strip-debug / -Sd	strips debug symbols from the file (but do not removes debug symbols from eg.linked libraries)
	--dump-cfg		dumps CFG graphs in 'DOT' file format into 2 directories: `optimized` and `not_optimized`. Use only for compiler debugging, as it can generate a lots of files (2*number of functions)!

5.Libraries only
	-header / -h  <file>	generates and saves header file

6.Other options
	-logo		displays only the compiler's information (like compile date), forces to doesn't compile anything
	-version	displays only the compiler's version
	-wait		waits for `enter` when finished
	-verbose / -v	enables `verbose` mode
	-devlog	/ -vv	shows devlog (more information about the compilation process; use only for compiler debugging)
